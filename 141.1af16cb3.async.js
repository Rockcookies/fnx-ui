(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[141],{A7I3:function(n,s){n.exports={attributes:{},html:'<h1 id="toast" tabindex="-1">Toast</h1>\n<p>Black semi-transparent pop-up hint in the middle of the page, used for message notification, loading hint, operation result hint and other scenarios.</p>\n<h2 id="basic-usage" tabindex="-1">Basic Usage</h2>\n<pre class="language-tsx"><code class="language-tsx" v-pre><span class="token keyword">import</span> <span class="token punctuation">{</span> Toast <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'fnx-ui\'</span><span class="token punctuation">;</span>\n\nToast<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token string">\'Message\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n<h2 id="loading" tabindex="-1">Loading</h2>\n<p>Use the <code v-pre>Toast.loading</code> method to display the loading toast, you can disable the background click via <code v-pre>forbidClick</code> property.</p>\n<pre class="language-tsx"><code class="language-tsx" v-pre><span class="token keyword">import</span> <span class="token punctuation">{</span> Toast <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'fnx-ui\'</span><span class="token punctuation">;</span>\n\nToast<span class="token punctuation">.</span><span class="token function">loading</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  message<span class="token operator">:</span> <span class="token string">\'Message\'</span><span class="token punctuation">,</span>\n  forbidClick<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n<h2 id="success-fail" tabindex="-1">Success / Fail</h2>\n<p>Use the <code v-pre>Toast.success</code> method to show success toast or the <code v-pre>Toast.fail</code> method to show failed toast.</p>\n<pre class="language-tsx"><code class="language-tsx" v-pre><span class="token keyword">import</span> <span class="token punctuation">{</span> Toast <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'fnx-ui\'</span><span class="token punctuation">;</span>\n\nToast<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">\'Success\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nToast<span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token string">\'Failed\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n<h2 id="custom-icon" tabindex="-1">Custom Icon</h2>\n<p>Use <code v-pre>icon</code> property to custom icon style.</p>\n<pre class="language-tsx"><code class="language-tsx" v-pre><span class="token keyword">import</span> <span class="token punctuation">{</span> Toast<span class="token punctuation">,</span> Icon <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'fnx-ui\'</span><span class="token punctuation">;</span>\n\nToast<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  message<span class="token operator">:</span> <span class="token string">\'Custom Icon\'</span><span class="token punctuation">,</span>\n  icon<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Icon</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>star<span class="token punctuation">"</span></span> <span class="token attr-name">spin</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nToast<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  message<span class="token operator">:</span> <span class="token string">\'Custom Icon.Spinner\'</span><span class="token punctuation">,</span>\n  icon<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Icon.Spinner</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n<h2 id="custom-position" tabindex="-1">Custom Position</h2>\n<p>Use the <code v-pre>position</code> property to set the position of the toast display.</p>\n<pre class="language-tsx"><code class="language-tsx" v-pre><span class="token keyword">import</span> <span class="token punctuation">{</span> Toast<span class="token punctuation">,</span> Icon <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'fnx-ui\'</span><span class="token punctuation">;</span>\n\nToast<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  message<span class="token operator">:</span> <span class="token string">\'Display on top\'</span><span class="token punctuation">,</span>\n  position<span class="token operator">:</span> <span class="token string">\'top\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nToast<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  message<span class="token operator">:</span> <span class="token string">\'Display on bottom\'</span><span class="token punctuation">,</span>\n  position<span class="token operator">:</span> <span class="token string">\'bottom\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n<h2 id="update-message" tabindex="-1">Update Message</h2>\n<p>Call the Toast function will return a Toast Instance, You can call the <code v-pre>update</code> of the Toast Instance to update toast.</p>\n<pre class="language-tsx"><code class="language-tsx" v-pre><span class="token keyword">import</span> <span class="token punctuation">{</span> Toast <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'fnx-ui\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> toast <span class="token operator">=</span> Toast<span class="token punctuation">.</span><span class="token function">loading</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  duration<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  message<span class="token operator">:</span> <span class="token string">\'3 seconds\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">let</span> second <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  second<span class="token operator">--</span><span class="token punctuation">;</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>second<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    toast<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span> message<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>second<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> seconds</span><span class="token template-punctuation string">`</span></span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    <span class="token function">clearInterval</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    toast<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n<h2 id="api" tabindex="-1">API</h2>\n<h3 id="toast-props" tabindex="-1">Toast Props</h3>\n<p>Toast extends <a href="#/en-US/components/popup">Popup</a> props and add the following props:</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n<th>Version</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>position</td>\n<td>Toast location</td>\n<td><code v-pre>\'top\'</code> | <code v-pre>\'bottom\'</code> | <code v-pre>\'middle\'</code></td>\n<td><code v-pre>\'middle\'</code></td>\n<td></td>\n</tr>\n<tr>\n<td>message</td>\n<td>Text content, support passing <code v-pre>\\n</code></td>\n<td><code v-pre>string</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>icon</td>\n<td>Custom icon</td>\n<td><code v-pre>ReactNode</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>duration</td>\n<td>Toast duration(ms), won\u2019t disappear if value is 0</td>\n<td><code v-pre>number</code></td>\n<td><code v-pre>2000</code></td>\n<td></td>\n</tr>\n<tr>\n<td>forbidClick</td>\n<td>Whether to forbid click background</td>\n<td><code v-pre>boolean</code></td>\n<td><code v-pre>false</code></td>\n<td></td>\n</tr>\n<tr>\n<td>clickCloseable</td>\n<td>Whether to close when click</td>\n<td><code v-pre>boolean</code></td>\n<td>-</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id="toast-method" tabindex="-1">Toast Method</h3>\n<table>\n<thead>\n<tr>\n<th>Event name</th>\n<th>Description</th>\n<th>Type</th>\n<th>Version</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Toast.show</td>\n<td>Display toast</td>\n<td><code v-pre>(props: string | ToastProps) =&gt; ToastInstance</code></td>\n<td></td>\n</tr>\n<tr>\n<td>Toast.loading</td>\n<td>Display loading toast</td>\n<td><code v-pre>(props: string | ToastProps) =&gt; ToastInstance</code></td>\n<td></td>\n</tr>\n<tr>\n<td>Toast.success</td>\n<td>Display success toast</td>\n<td><code v-pre>(props: string | ToastProps) =&gt; ToastInstance</code></td>\n<td></td>\n</tr>\n<tr>\n<td>Toast.fail</td>\n<td>Display failed toast</td>\n<td><code v-pre>(props: string | ToastProps) =&gt; ToastInstance</code></td>\n<td></td>\n</tr>\n<tr>\n<td>Toast.clearAll</td>\n<td>Close toast</td>\n<td><code v-pre>() =&gt; void</code></td>\n<td></td>\n</tr>\n<tr>\n<td>Toast.allowMultiple</td>\n<td>Allow multiple toast at the same time</td>\n<td><code v-pre>(allow: boolean) =&gt; void</code></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id="toast-instance-methods" tabindex="-1">Toast Instance Methods</h3>\n<table>\n<thead>\n<tr>\n<th>Method Name</th>\n<th>Description</th>\n<th>Type</th>\n<th>Version</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>update</td>\n<td>Update toast instance</td>\n<td><code v-pre>(props: ToastProps) =&gt; void</code></td>\n<td></td>\n</tr>\n<tr>\n<td>clear</td>\n<td>Destroy toast instance</td>\n<td><code v-pre>() =&gt; void</code></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n'}}}]);