var e=Object.defineProperty,r=(a,t,i)=>t in a?e(a,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):a[t]=i,o=(a,t,i)=>(r(a,typeof t!="symbol"?t+"":t,i),i);const h={startX:0,startY:0,deltaX:0,deltaY:0,offsetX:0,offsetY:0,direction:void 0};function c(a,t){if(a>t)return"horizontal";if(t>a)return"vertical"}class u{constructor(){o(this,"touchData",{...h}),o(this,"reset",()=>{this.touchData={...h}}),o(this,"start",t=>{this.reset(),this.touchData.startX=t.touches[0].clientX,this.touchData.startY=t.touches[0].clientY}),o(this,"move",t=>{const i=t.touches[0];this.touchData.deltaX=i.clientX-this.touchData.startX,this.touchData.deltaY=i.clientY-this.touchData.startY,this.touchData.offsetX=Math.abs(this.touchData.deltaX),this.touchData.offsetY=Math.abs(this.touchData.deltaY);const s=10;(!this.touchData.direction||this.touchData.offsetX<s&&this.touchData.offsetY<s)&&(this.touchData.direction=c(this.touchData.offsetX,this.touchData.offsetY))}),o(this,"isVertical",()=>this.touchData.direction==="vertical"),o(this,"isHorizontal",()=>this.touchData.direction==="horizontal")}}export{u as T};
