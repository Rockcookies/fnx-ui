const n={},t='<h1>Dialog 对话框</h1>\n<p>弹出模态框，常用于消息提示、消息确认，或在当前页面内完成特定的交互操作。</p>\n<p>弹出框组件支持函数调用和组件调用两种方式。</p>\n<h2 id="han-shu-diao-yong" tabindex="-1">函数调用</h2>\n<p><code>Dialog.show</code> 作为函数，调用后会直接在页面中弹出相应的模态框。</p>\n<pre class="language-tsx"><code class="language-tsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> Dialog <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'fnx-ui\'</span><span class="token punctuation">;</span>\n\nDialog<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  title<span class="token operator">:</span> <span class="token string">\'Dialog\'</span><span class="token punctuation">,</span>\n  message<span class="token operator">:</span> <span class="token string">\'Dialog Content\'</span><span class="token punctuation">,</span>\n  messageAlign<span class="token operator">:</span> <span class="token string">\'Left\'</span><span class="token punctuation">,</span>\n  confirmText<span class="token operator">:</span> <span class="token string">\'Confirm\'</span><span class="token punctuation">,</span>\n  cancelText<span class="token operator">:</span> <span class="token string">\'Cancel\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>；\n\n</code></pre>\n<h2 id="zu-jian-diao-yong" tabindex="-1">组件调用</h2>\n<p>通过组件调用 <code>Dialog</code> 时，可以通过 <code>visible</code> 控制显示隐藏。</p>\n<pre class="language-tsx"><code class="language-tsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> Dialog <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'fnx-ui\'</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Dialog</span></span> <span class="token attr-name">visible</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Dialog<span class="token punctuation">"</span></span> <span class="token attr-name">message</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Message<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n<h2 id="yi-bu-guan-bi" tabindex="-1">异步关闭</h2>\n<p>通过 <code>onConfirm</code> ，<code>onCancel</code> 属性可以传入一个回调函数，需要执行完才会关闭，不关闭则返回 <code>false</code>。</p>\n<pre class="language-tsx"><code class="language-tsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> Dialog <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'fnx-ui\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token parameter">timeoutsMs</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> timeoutsMs<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nDialog<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  title<span class="token operator">:</span> <span class="token string">\'Dialog\'</span><span class="token punctuation">,</span>\n  message<span class="token operator">:</span> <span class="token string">\'Dialog Content\'</span><span class="token punctuation">,</span>\n  messageAlign<span class="token operator">:</span> <span class="token string">\'Left\'</span><span class="token punctuation">,</span>\n  confirmText<span class="token operator">:</span> <span class="token string">\'Confirm\'</span><span class="token punctuation">,</span>\n  cancelText<span class="token operator">:</span> <span class="token string">\'Cancel\'</span><span class="token punctuation">,</span>\n  <span class="token function-variable function">onConfirm</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">await</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function-variable function">onCancel</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">await</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    Toast<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token string">\'Stopped!\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n<h2 id="zi-ding-yi-nei-rong" tabindex="-1">自定义内容</h2>\n<p><code>children</code> 类型是 <code>ReactNode</code>，接受自定义内容。</p>\n<pre class="language-tsx"><code class="language-tsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> Dialog <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'fnx-ui\'</span><span class="token punctuation">;</span>\n\nDialog<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  title<span class="token operator">:</span> <span class="token string">\'Dialog\'</span><span class="token punctuation">,</span>\n  message<span class="token operator">:</span> <span class="token string">\'Dialog Content\'</span><span class="token punctuation">,</span>\n  messageAlign<span class="token operator">:</span> <span class="token string">\'Left\'</span><span class="token punctuation">,</span>\n  confirmText<span class="token operator">:</span> <span class="token string">\'Confirm\'</span><span class="token punctuation">,</span>\n  cancelText<span class="token operator">:</span> <span class="token string">\'Cancel\'</span><span class="token punctuation">,</span>\n  children<span class="token operator">:</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://img17.fn-mart.com/pic/2a021346939822ebb66f/B26n221z_2fdhMZdKz/7imyeafa3yKGj9/CsmRtmA3RAuAVmgsAAKtgt1PF3s715.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n<h2 id="dong-tai-jia-zai" tabindex="-1">动态加载</h2>\n<p>执行 <code>Dialog</code> 方法时会返回对应的 <code>Dialog</code> 实例，通过 <code>update</code> 方法修改实例上的 <code>message</code> 属性可以实现动态更新提示的效果。</p>\n<pre class="language-tsx"><code class="language-tsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> Dialog<span class="token punctuation">,</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'fnx-ui\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useRef <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> dialog <span class="token operator">=</span> Dialog<span class="token punctuation">.</span><span class="token function">useDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> timerRef <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useRef</span><span class="token generic class-name"><span class="token operator">&lt;</span>NodeJS<span class="token punctuation">.</span>Timeout<span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">handleCountdown</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> second <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> toast <span class="token operator">=</span> dialog<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    message<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Now it is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>second<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  timerRef<span class="token punctuation">.</span>current <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    second<span class="token operator">--</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>second<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      toast<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        message<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Now it is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>second<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      toast<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleCountdown<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">Dynamic Loading</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n<h2 id="api" tabindex="-1">API</h2>\n<p><code>ButtonProps</code> 类型参考 <code>Button</code> 组件。</p>\n<div class=\'markdown__table-wrapper\'><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>title</td>\n<td>标题</td>\n<td><code>ReactNode</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>footer</td>\n<td>页脚</td>\n<td><code>ReactNode</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>width</td>\n<td>宽度</td>\n<td><code>number | string</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>message</td>\n<td>内容</td>\n<td><code>ReactNode</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>messageAlign</td>\n<td>内容对齐方式</td>\n<td><code>\'left\' | \'right\'</code></td>\n<td><code>center</code></td>\n</tr>\n<tr>\n<td>confirmButton</td>\n<td>确认按钮</td>\n<td><code>ReactNode</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>confirmText</td>\n<td>确认按钮文案</td>\n<td><code>string</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>confirmLoading</td>\n<td>点击确认是否显示加载图标</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>confirmButtonProps</td>\n<td>确认按钮属性</td>\n<td><code>ButtonProps</code></td>\n<td><code>{}</code></td>\n</tr>\n<tr>\n<td>cancelButton</td>\n<td>取消按钮</td>\n<td><code>ReactNode</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>cancelText</td>\n<td>取消按钮文案</td>\n<td><code>string</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>cancelLoading</td>\n<td>确认加载完毕</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>cancelButtonProps</td>\n<td>取消按钮属性</td>\n<td><code>ButtonProps</code></td>\n<td><code>{}</code></td>\n</tr>\n<tr>\n<td>bodyProps</td>\n<td>内容包裹层属性</td>\n<td><code>HTMLAttributes</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>visible</td>\n<td>是否显示弹出层</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>round</td>\n<td>是否展示圆角</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>position</td>\n<td>位置</td>\n<td><code>top` | `bottom` | `middle</code></td>\n<td><code>middle</code></td>\n</tr>\n<tr>\n<td>overlay</td>\n<td>是否显示遮罩层</td>\n<td><code>boolean</code></td>\n<td><code>fill</code></td>\n</tr>\n<tr>\n<td>overlayClassName</td>\n<td>遮罩层类名</td>\n<td><code>string</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>overlayStyle</td>\n<td>遮罩层样式</td>\n<td><code>string</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>overlayCloseable</td>\n<td>是否点击遮罩层关闭</td>\n<td><code>boolean</code></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>renderOnShow</td>\n<td>是否渲染加载</td>\n<td><code>boolean</code></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>destroyOnHide</td>\n<td>是否关闭销毁</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>mountTo</td>\n<td>指定挂载的节点</td>\n<td><code>boolean | element | ()=&gt;element </code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>transitionDuration</td>\n<td>过渡动画</td>\n<td><code>number</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>transitionName</td>\n<td>过渡动画类名</td>\n<td><code>string</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>lockScroll</td>\n<td>是否禁止滚动</td>\n<td><code>boolean</code></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>safeAreaInsetBottom</td>\n<td>是否开启底部安全区适配</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n</tbody>\n</table>\n</div><h2 id="shi-jian" tabindex="-1"><Dialog /> 事件</h2>\n<div class=\'markdown__table-wrapper\'><table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>说明</th>\n<th>参数</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>onConfirm</td>\n<td>确认回调</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onCancel</td>\n<td>取消回调</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onShow</td>\n<td>打开弹出层时触发</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onOverlayClick</td>\n<td>点击遮罩层触发</td>\n<td><code>(e: React.MouseEvent&lt;HTMLElement, MouseEvent&gt;)</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>onClose</td>\n<td>遮罩层可点击时点击遮罩层触发</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onBeforeHide</td>\n<td>出场动画前执行触发</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onHide</td>\n<td>出场动画中执行触发</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onAfterHide</td>\n<td>出场动画后执行触发</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onBeforeShow</td>\n<td>进场动画前执行触发</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onShow</td>\n<td>进场动画中执行触发</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onAfterShow</td>\n<td>进场动画后执行触发</td>\n<td>-</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div><h2 id="dialog-fang-fa" tabindex="-1">Dialog 方法</h2>\n<p><code>DialogProps</code>类型为组件 API。</p>\n<div class=\'markdown__table-wrapper\'><table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>说明</th>\n<th>参数</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Dialog.show()</td>\n<td>展示弹窗</td>\n<td><code>DialogProps</code></td>\n<td>弹窗示例</td>\n</tr>\n<tr>\n<td>Dialog.clearAll()</td>\n<td>销毁弹窗实例</td>\n<td>-</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div><h3 id="dialog-shi-li-fang-fa" tabindex="-1">Dialog 实例方法</h3>\n<pre><code>const useDialog = Dialog.useDialog();\nconst dialog=useDialog.show()\ndialog.update();\ndialog.clear();\n\n</code></pre>\n<div class=\'markdown__table-wrapper\'><table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>说明</th>\n<th>参数</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>dialog.update()</td>\n<td>更新展示提示</td>\n<td><code>({ visible: boolean | undefined, ...props }) </code></td>\n<td>toast 实例</td>\n</tr>\n<tr>\n<td>dialog.clear()</td>\n<td>销毁实例</td>\n<td>-</td>\n<td>toast 实例</td>\n</tr>\n</tbody>\n</table>\n</div>';export{n as attributes,t as html};
